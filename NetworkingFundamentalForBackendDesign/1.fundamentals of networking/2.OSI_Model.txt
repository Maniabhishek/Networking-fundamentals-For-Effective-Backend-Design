OSI

Why do we need a communication model
Agnostic applications:
   Without a standard model , your application must have knowledge of the underlying network medium 
    Imagine if you have to author different version of your apps so that it works on wifi vs ethernet vs LTE vs fiber
Network Equipment Management
    Without a standard model , upgrading network equipments becomes difficult
Decoupled Innovation
     Innovations can be done in each layer separately without affecting the rest of the models

OSI MODEL:
There are 7 layer in which each describes a specific networking component
Layer 7 : Application Layer - HTTP/FTP/gRPC
Layer 6 : Presentation - Encoding , serialization 
Layer 5 : Session - Connection establishment , TLS
Layer 4 : Transport - UDP/TCP
Layer 3 : Network - IP
Layer 2 : Data link -  Frames , MAC address Ethernet
Layer 1 : Physical - Electric signals , fibre or radio waves

=> Backend developer has to worry mostly about 7 and 4 layer
=> Http ,  http/2 , http/3 built on top of tcp quick on UDP

=>  Layer 3 Network - IP 
Here we don’t have visibility of port on layer 4 we kbnnow the port 8080 whatever

=> Data link layer : we are dealing with the physical medium , for example if a wifi has a xyz Mac address and we want to send a frames to this address , 
  we don’t know about the IP address here 

Let’s see how OSI play its part in POST request to HTTPS web page
Layer 7 : Application
	POST request with JSON data to HTTPS server
Layer 6 : Presentation 
	this will serialise json to flat byte strings
Layer 5 : Session 
	Request to establish TCP connection / TLS
Layer 4 : Transport (segment)
	Sends SYN request target port 443(default port for HTTPS)
Layer 3 : Network (packet)
	SYN is placed in the IP packets and adds the source / dest IPs
Layer 2 : Data Link (frame)
	Each packet goes into a single frame and adds the source/dest MAC addresses
Layer 1 : Physical 
	Each frame becomes string of bits which converted into either a radio signal (wifi), electric signal (ethernet), or light (fibre)


This is possible that I can send the data through wifi and you receive through fibre , its only possible because of OSI Layers

Receiver system receives the POST request the other way around 
Layer 1 - Physical 
	Radio , electric or light is received and converted into digital bits
Layer 2 - Data link 
	This bits from layer 1 are assembled into frames
Layer 3 - Network 
	The frames from layer 2 are assembled into IP packet
Layer 4 - Transport 
	The IP packets from layer 3 are assembled into TCP segments 
	Deals with congestion control/flow control/retransmission in case of TCP
	If segments is SYN we don’t need to go further into more layers as we are still processing the connection reqeust 

Layer 5 : Session 
	The connection session is established or identified
	we only arrive at this layer when necessary (three way handshake is done)
Layer 6 : Presentation 
	Deserialise flat byte string back to json for the app to consume
Layer 7 : Application 
	Application understands the json POST request and your express JSON or apache request event is triggered 


=> Do I always have to go through all these protocol
NO

For example I have to send the HTTP POST request but I need to establish the new connection 

Let’s see

=> Application will send the post request , Presentation does the JSON stuff , now goes to session , 
  it doesn’t have the connection established it will send syn ack go all the way to receiver session to establish the 
  connection and again send the en ack , now full connection is send , now post request resumes (session to session can be on packet )


=> clients aren’t connected directly to there can be switches , router , cdn’s , proxy , load balancer, reverse proxy , what do these do , 
  they look at the data make some decisions
  For example
  Switch in case connect different subnet together , it confirms data is not sent to different network, switch only needs physical , and data link , 
  it sees the frames in data link layer , it doesn’t really need IP address most of the time so it doesn’t go to network layer (some does)

Whereas Router will need the IP address, it needs to route , it is layer 3 device 

Lets see about Layer 4 Proxy , firewall , Layer 7  load balancer /CDN
=> Backend engineer mostly need to worry about application layer and transport layer 

Proxy is layer 4 
it blocks certain application from sending data or block certain unwanted packet to come through network for this to be done it need to look IP address 
 (network layer ) needs to look at PORT (transport layer) they are called as transparent firewall or transparent proxies .
 these are really transparent everything upto transport layer is visible to everyone , everyone can read IP address port , it is never encrypted , you 
 need IP address to route data and port you need it public these are public so thats why transparent firewall 
 
 ISP can rewrite the port 
 
 In Load balancing instead of port 8080 dont go there it will rewrite in transport payer , and can send it to some other port you can rewrite the packet 
 You can also think that your ISP can do that too can send data anywhere they want to, because ISP is first place packet goes to thats why lot of people
 uses VPN , VPN takes the IP packet and puts in to another IP packet VPN is layer 3 protocol some is 2 

Drwabacks of OSI :
=> OSI model has too many layers which can be hard to comprehend 
=> Hard to argue about which layer does what
=> Simpler to deal with layer 5-6-7 as just one layer , application 
=> TCP/IP Model does just that 

TCP/IP model
=> Much simpler than OSI just 4 layers 
=> Application (layer 5,6 ,7)
=> Transport (Layer 4)
=> Internet (Layer 3)
=> Data Link Layer (layer 2)
=> Physical layer is not covered in the model 
